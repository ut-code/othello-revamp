/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_point_free(a: number, b: number): void;
export function __wbg_get_point_x(a: number): number;
export function __wbg_set_point_x(a: number, b: number): void;
export function __wbg_get_point_y(a: number): number;
export function __wbg_set_point_y(a: number, b: number): void;
export function point_create(a: number, b: number): number;
export function __wbg_board_free(a: number, b: number): void;
export function __wbg_get_board_size(a: number): number;
export function __wbg_set_board_size(a: number, b: number): void;
export function board_get_data(a: number): number;
export function __wbg_placeerror_free(a: number, b: number): void;
export function greet(): void;
export function version(a: number): void;
export function init_othello(a: number): number;
export function placeable(a: number, b: number): number;
export function can_place(a: number, b: number, c: number): number;
export function __wbg_scores_free(a: number, b: number): void;
export function __wbg_get_scores_black(a: number): number;
export function __wbg_set_scores_black(a: number, b: number): void;
export function __wbg_get_scores_white(a: number): number;
export function __wbg_set_scores_white(a: number, b: number): void;
export function count_score(a: number): number;
export function place_at(a: number, b: number, c: number, d: number): void;
export function generate_ai_play(a: number, b: number, c: number): number;
export function __wbindgen_malloc(a: number, b: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number, d: number): number;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_free(a: number, b: number, c: number): void;
export function __wbindgen_exn_store(a: number): void;
